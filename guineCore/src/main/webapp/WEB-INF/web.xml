<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1"  metadata-complete="true">

  <display-name>guineaFox</display-name>

  <!-- 静态资源 -->
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.fmt</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.js</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.css</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.jpg</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.gif</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.ico</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.woff</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.woff2</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.ttf</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.swf</url-pattern>
  </servlet-mapping>

  <!-- 设置servlet编码开始 -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!-- 设置servlet编码结束 -->

  <!-- servlet文件上传
     max-file-size 最大文件上传大小 1024*1024*200
     max-request-size 每次上传最大文件大小 1024*1024*88
     location文件路径
        -->
  <servlet>
    <servlet-name>uploadifyServlet</servlet-name>
    <servlet-class>com.guinea.web.servlet.UploadifyServlet</servlet-class>
    <async-supported>true</async-supported>
    <multipart-config>
      <location>D:\tessdata\mefiles</location>
      <max-file-size>209715200</max-file-size>
      <max-request-size>92274688</max-request-size>
    </multipart-config>
  </servlet>
  <servlet-mapping>
    <servlet-name>uploadifyServlet</servlet-name>
    <url-pattern>/uploadify/UploadifyServlet</url-pattern>
  </servlet-mapping>

  <!-- 指定Spring的配置文件 -->
  <!-- 否则 Spring 会默认从WEB-INF下寻找配置文件, contextConfigLocation 属性是 Spring 内部固定的 -->
  <!-- 通过ContextLoaderListener的父类ContextLoader的第120行发现CONFIG_LOCATION_PARAM固定为 contextConfigLocation -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:sky-config.xml,classpath:sky-jdbc.xml,classpath:sky-shrio.xml
    </param-value>
  </context-param>
  <!-- 防止发生java.beans.Introspector内存泄露,应将它配置在ContextLoaderListener的前面 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <!-- 实例化Spring容器 -->
  <!-- 应用启动时,该监听器被执行,它会读取 Spring 相关配置文件,其默认会到 WEB-INF 中查找 applicationContext.xml -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 可以使用RequestContextHolder.currentRequestAttributes() 获取到请求的attr -->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <!-- Spring配置文件结束 -->

  <!-- shiro 安全过滤器 start-->
  <filter>
    <filter-name>shiroFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>targetFilterLifecycle</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>shiroFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>
  <!-- shiro 安全过滤器 end-->

  <servlet>
    <servlet-name>jasper</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:sky-view.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>jasper</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

</web-app>